"""
Django settings for wizling project.

Generated by 'djangocms' command using django CMS 4.1.3 and Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of Django settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/

For the list of django CMS settings and their values, see
https://docs.django-cms.org/en/release-4.1.x/reference/configuration.html
"""

import os
from pathlib import Path
from dotenv import load_dotenv
import sys
from django.utils.translation import gettext_lazy as _
from pathlib import Path
import logging
import sys





ALLOWED_HOSTS = ['*'] 
# ALLOWED_HOSTS = [
#     'localhost', 
#     '127.0.0.1',
#     'djangocms-649684198786.us-central1.run.app',
#     '.run.app'  # This allows all Cloud Run URLs
# ]

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5nz3$_^&_u(*v)e20mk@@ag6j(g0_0z#z5&5$zly6wst=b$b6x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',') if os.getenv('ALLOWED_HOSTS') else []

# Application definition

INSTALLED_APPS = [
    # 'wagtail.contrib.forms',
    # 'wagtail.contrib.redirects',
    # 'wagtail.embeds',
    # 'wagtail.sites',
    # 'wagtail.users',
    # 'wagtail.snippets',
    # 'wagtail.documents',
    # 'wagtail.images',
    # 'wagtail.search',
    # 'wagtail.admin',
    # 'wagtail',
    # 'modelcluster',
    'taggit',
    'djangocms_admin_style',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
     # CMS base apps
    'cms',
    'menus',

    'djangocms_text_ckeditor',
    'djangocms_alias',
    'djangocms_versioning',

    'sekizai',
    'treebeard',
    'parler',

    'filer',
    'easy_thumbnails',
    'djangocms_frontend',
    'djangocms_frontend.contrib.accordion',
    'djangocms_frontend.contrib.alert',
    'djangocms_frontend.contrib.badge',
    'djangocms_frontend.contrib.card',
    'djangocms_frontend.contrib.carousel',
    'djangocms_frontend.contrib.collapse',
    'djangocms_frontend.contrib.content',
    'djangocms_frontend.contrib.grid',
    'djangocms_frontend.contrib.icon',
    'djangocms_frontend.contrib.image',
    'djangocms_frontend.contrib.jumbotron',
    'djangocms_frontend.contrib.link',
    'djangocms_frontend.contrib.listgroup',
    'djangocms_frontend.contrib.media',
    'djangocms_frontend.contrib.navigation',
    'djangocms_frontend.contrib.tabs',
    'djangocms_frontend.contrib.utilities',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'cms.middleware.language.LanguageCookieMiddleware',

]

ROOT_URLCONF = 'wizling.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "wizling", "templates"),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.i18n',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'sekizai.context_processors.sekizai',
                'cms.context_processors.cms_settings',
            ],
        },
    },
]

THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters',
)

WSGI_APPLICATION = 'wizling.wsgi.application'



#THIS WORKS FOR LOCAL DEVELOPMENT
load_dotenv()
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'language_learning_cms',
        'USER': 'cms_user',
        'PASSWORD': os.getenv('CMS_DB_PASSWORD'),  
        'HOST': '127.0.0.1',  
        'PORT': '3306',
        'OPTIONS': {
     'charset': 'utf8mb4',
    'init_command': 'SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci'  }
    }
}

# Database Configuration for GCLOUD
# socket_path = os.getenv('DB_HOST', '/cloudsql/wizling:us-central1:wizling-mysql')

# Set DATABASES first - for GCloud
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': os.getenv('CMS_DB'),
#         'USER': os.getenv('DB_USER'),
#         'PASSWORD': os.getenv('DB_PASSWORD'),
#         'HOST': socket_path,
#         'PORT': '',
#         'OPTIONS': {
#             'charset': 'utf8mb4',
#             'init_command': 'SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci'
#         }
#     }
# }


# Setup logging
logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)
db_logger = logging.getLogger('django.db.backends')
db_logger.setLevel(logging.DEBUG)
db_logger.addHandler(logging.StreamHandler())

# Initial debug prints
print("=== DATABASE CONNECTION DEBUG ===")
print(f"DB_HOST: {os.getenv('DB_HOST')}")
print(f"DB_USER: {os.getenv('DB_USER')}")
print(f"CMS_DB: {os.getenv('CMS_DB')}")
print(f"CMS_DB_PASSWORD: {os.getenv('CMS_DB_PASSWORD')}")
print("================================")


# Debug connection function
def debug_db_connection():
    try:
        from django.db import connections
        conn = connections['default']
        conn.cursor()
        print("Connection test successful")
        return True
    except Exception as e:
        print(f"Connection error: {str(e)}")
        print(f"Connection params: {conn.get_connection_params()}")
        return False

# Call debug after DATABASES is set
debug_db_connection()

# Use in Django settings
# FUTURE DATABASE FOR APP. IGNORE FOR NOW.
    # 'language_data': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'language_learning',
    #     'USER': os.getenv('LANG_DB_USER'),
    #     'PASSWORD': os.getenv('LANG_DB_PASSWORD'),
    #     'HOST': 'host.docker.internal',
    #     # 'HOST': os.getenv('DB_HOST'),
    #     'PORT': int(os.getenv('DB_PORT', 3306)),
    #     'OPTIONS': {
    #         'charset': 'utf8mb4',
    #         'use_unicode': True,
    #         'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
    #         'auth_plugin': 'mysql_native_password',  # Add this line
    #     }
    # }}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# ALLOW STYLES IN WYSIWYG
CMS_TINYMCE_OPTIONS = {
    'valid_elements': '*[*]',  # Allow all HTML tags and attributes
    'extended_valid_elements': 'div[class|id|style],span[class|id|style],p[class|id|style]',  # Specify allowed tags and attributes for custom styles
    'valid_styles': {
        '*': 'color,font-size,text-align,padding,margin,border'  # Specify allowed inline styles
    },
}


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en'

LANGUAGES = [
    ("en", _("English")),
    # Add additional languages here
]

TIME_ZONE = 'UTC'

USE_I18N = True
USE_L10N = True
USE_THOUSAND_SEPARATOR = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "wizling/static"),  # Include the app's static folder
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# This is a django CMS 4 template

CMS_CONFIRM_VERSION4 = True

# django CMS requires the site framework
# https://docs.django-cms.org/en/release-4.1.x/how_to/multi-site.html

SITE_ID = 1

# A base template is part of this setup
# https://docs.django-cms.org/en/release-4.1.x/reference/configuration.html#cms-templates

CMS_TEMPLATES = (
    ("base.html", _("Standard")),
    ("drop.html", _("KanaDropGame")),
)



# Enable permissions
# https://docs.django-cms.org/en/release-4.1.x/topics/permissions.html

CMS_PERMISSION = True

# Allow admin sidebar to open admin URLs

X_FRAME_OPTIONS = 'SAMEORIGIN'

# Enable inline editing with djangocms-text-ckeditor
# https://github.com/django-cms/djangocms-text-ckeditor#inline-editing-feature

TEXT_INLINE_EDITING = True

CKEDITOR_SETTINGS = {
    'contentsCss': ['/static/css/components.css', '/static/css/base.css'],  # Link your custom CSS
    # 'stylesSet': 'default',  # Use default stylesSet if no customization is needed
    'allowedContent': True,  # Allow all HTML and styles
    'extraAllowedContent': '*[*]{*}',  # Allow all tags, attributes, and styles
}


TEXT_ADDITIONAL_ATTRIBUTES = ('id', 'class', 'style', 'data-*')  # Add attributes that should not be stripped


# Add project-wide static files directory
# https://docs.djangoproject.com/en/5.1/ref/settings/#staticfiles-dirs

STATICFILES_DIRS = [
    BASE_DIR / "wizling" / "static",
]

INTERNAL_IPS = [
    "127.0.0.1",
]

# Add project-wide static files directory
# https://docs.djangoproject.com/en/5.1/ref/settings/#media-root

#MEDIA_URL = "media/"
#MEDIA_ROOT = str(BASE_DIR.parent / "wizling" / "media")

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
WAGTAIL_SITE_NAME = 'Wizling'
WAGTAILDOCS_EXTENSIONS = ['csv', 'docx', 'key', 'odt', 'pdf', 'pptx', 'rtf', 'txt', 'xlsx', 'zip']
#WAGTAILADMIN_BASE_URL = 'http://wizling.com/'